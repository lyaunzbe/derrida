{
  "name": "morpheus",
  "description": "A Brilliant Animator",
  "version": "0.6.3",
  "homepage": "https://github.com/ded/morpheus",
  "author": {
    "name": "Dustin Diaz",
    "email": "polvero@gmail.com",
    "url": "http://dustindiaz.com"
  },
  "keywords": [
    "ender",
    "animation",
    "motion",
    "css",
    "colors",
    "morph",
    "tween",
    "curve",
    "bezier",
    "transform",
    "skew",
    "rotate"
  ],
  "main": "./morpheus.js",
  "ender": "./src/ender.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/ded/morpheus.git"
  },
  "devDependencies": {
    "sink-test": ">= 0.0.9"
  },
  "readme": "    _  _ ____ ____ ___  _  _ ____ _  _ ____\n    |\\/| |  | |__/ |__] |__| |___ |  | [__\n    |  | |__| |  \\ |    |  | |___ |__| ___]\n-----\nA Brilliant Animator.\n\nMorpheus lets you \"tween anything\" in parallel on multiple elements; from colors to integers of any unit (px, em, %, etc), with easing transitions and bezier curves, including CSS3 [transforms](http://www.w3.org/TR/css3-2d-transforms/) (roate, scale, skew, & translate) -- all in a single high-performant loop utilizing the CPU-friendly [requestAnimationFrame](http://webstuff.nfshost.com/anim-timing/Overview.html) standard.\n\nIt looks like this:\n\n``` js\nvar anim = morpheus(elements, {\n  // CSS\n    left: -50\n  , top: 100\n  , width: '+=50'\n  , height: '-=50px'\n  , fontSize: '30px'\n  , color: '#f00'\n  , transform: 'rotate(30deg) scale(+=3)'\n  , \"background-color\": '#f00'\n\n    // API\n  , duration: 500\n  , easing: easings.easeOut\n  , bezier: [[100, 200], [200, 100]]\n  , complete: function () {\n      console.log('done')\n    }\n})\n\n// stop an animation\nanim.stop()\n\n// jump to the end of an animation and run 'complete' callback\nanim.stop(true)\n```\n\nGeneral Tweening\n------\n\n``` js\nmorpheus.tween(1000,\n  function (position) {\n    // do stuff with position...\n    // like for example, use bezier curve points :)\n    var xy = morpheus.bezier([[startX, startY], <[n control points]>, [endX, endY]], position)\n  },\n  function () {\n    console.log('done')\n  },\n  easings.bounce,\n  100, // start\n  300 // end\n)\n```\n\nAPI\n---\n\n``` js\n/**\n  * morpheus:\n  * @param element(s): HTMLElement(s)\n  * @param options: mixed bag between CSS Style properties & animation options\n  *  - {n} CSS properties|values\n  *     - value can be strings, integers,\n  *     - or callback function that receives element to be animated. method must return value to be tweened\n  *     - relative animations start with += or -= followed by integer\n  *  - duration: time in ms - defaults to 1000(ms)\n  *  - easing: a transition method - defaults to an 'easeOut' algorithm\n  *  - complete: a callback method for when all elements have finished\n  *  - bezier: array of arrays containing x|y coordinates that define the bezier points. defaults to none\n  *     - this may also be a function that receives element to be animated. it must return a value\n  * @return animation instance\n  */\n```\n\nSee the <a href=\"http://ded.github.com/morpheus/\">live examples</a>\n\nLanguage LTR - RTL support\n---------------\nFor those who run web services that support languages spanning from LTR to RTL, you can use the drop-in plugin filed called <code>rtltr.js</code> found in the <code>src</code> directory which will automatically mirror all animations without having to change your implementation. It's pretty rad.\n\nBrowser support\n-----------\nGrade A & C Browsers according to Yahoo's [Graded Browser Support](http://developer.yahoo.com/yui/articles/gbs/). CSS3 transforms are only supported in browsers that support the transform specification.\n\nEnder integration\n--------\nGot [Ender](http://ender.no.de)? No? Get it.\n\n    $ npm install ender -g\n\nAdd Morpheus to your existing Ender build\n\n    $ ender add morpheus\n\nWrite code like a boss:\n\n``` js\n$('#content .boosh').animate({\n  left: 911,\n  complete: function () {\n    console.log('boosh')\n  }\n})\n```\n\nUsage Notes\n-----------\n\n<h3>Color</h3>\nIf you're serious about *color animation*, there's a few precautions you'll need to take ahead of time. In order to morph *from* one color to another, you need to make sure the elements you're animating *have an inherited color style* to start with. Furthermore, those styles need to be represented in <code>rgb</code>, or <code>hex</code>, and not a named color (like <code>red</code>, or <code>orange</code>) -- that is unless you want to write code to map the [color conversion](http://www.w3schools.com/css/css_colornames.asp) yourself.\n\nTherefore, at minimum, you need to set a color before animating.\n\n``` js\nelement.style.color = '#ff0';\nmorpheus(element, {\n  color: '#000'\n})\n```\n\nWith [Bonzo](https://github.com/ded/bonzo) installed in [Ender](http://ender.no.de).\n\n``` js\n$('div.things').css('color', '#ff0').animate({\n  color: '#000'\n})\n```\n\n<h3>Units</h3>\nIf you're considering animating by a CSS unit of measurement like <code>em</code>, <code>pt</code>, or <code>%</code>, like-wise to color animation, you must set the size ahead of time before animating:\n\n``` js\n$('div.intro')\n  .css({\n      fontSize: '2em'\n    , width: '50%'\n  })\n  .animate({\n      fontSize: '+=1.5em'\n    , width: '100%'\n  })\n```\n\nYou also get two other fancy fading hooks\n\n``` js\n$('p').fadeIn(250, function () {\n  console.log('complete')\n})\n\n$('p').fadeOut(500, function () {\n  console.log('complete')\n})\n```\n\n<h3>Transforms</h3>\nTransforms can be animated in browsers that support them (IE9, FF, Chrome, Safari, Opera). <code>morpheus.transform</code> provides a shortcut to the correct style property for the browser (webkitTransform, MozTransform, etc). Like animating on units or color, you must set the property ahead of time before animating:\n\n``` js\nelement.style[morpheus.transform] = 'rotate(30deg) scale(1)'\nmorpheus(element, {\n  transform: 'rotate(0deg) scale(+=3)'\n})\n```\n\nAMD Support\n----------\n\n``` js\nrequire('morpheus.js', function (morpheus) {\n  morpheus(elements, config)\n})\n\nor as usual with ender\n\nvar morpheus = require('morpheus')\n\n```\n\n## Developers\n\nIf you're looking to contribute. Add your changes to `src/morpheus.js` Then run the following\n\n    $ npm install smoosh -g\n    $ npm install --dev\n    $ make\n    $ open tests/tests.html\n\nMorpheus (c) Dustin Diaz 2011 - License MIT\n\n**Happy Morphing!**\n",
  "_id": "morpheus@0.6.3",
  "dist": {
    "shasum": "e94d3c20cad38954342a5e9c48971cb9e11af28b"
  },
  "_from": "morpheus"
}
